"""
Django settings for dj_lol_dcs project.

Generated by 'django-admin startproject' using Django 2.0.

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

SECRET_KEY = os.environ['DJ_SECRET_KEY']
DEBUG = True
ALLOWED_HOSTS = ['*']  # Do not check Host header (for simplicity's sake, less secure - more available)
TIME_ZONE = 'UTC'      # Default datetime handling in UTC+0
USE_I18N = False       # Not using .po files for translating (translations embed per each sub-page)

INSTALLED_APPS = [
    'django.contrib.auth',          # Authentication models (User,AnonymousUser,Permission,Group, validators, login/out)
    'django.contrib.contenttypes',  # ORM -plugin to manage generic relations, required by django.contrib.auth
    'django.contrib.sessions',      # Session models
    'django.contrib.staticfiles',   # python manage.py collectstatic, distributed static files per app, and STATIC_URL
    'lolapi',
    'monitor'
]
RATELIMIT_LOG_PATH = os.path.join(BASE_DIR, 'log')
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '127.0.0.1:11211',
        'KEY_PREFIX': 'DJ_'
    }
}
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ['DJ_PG_DBNAME'],
        'USER': os.environ['DJ_PG_USERNAME'],
        'PASSWORD': os.environ['DJ_PG_PASSWORD'],
        'HOST': 'localhost',
        'PORT': '',
    }
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',            # Available: XSS Filter, nosniff, and HSTS/SSL-redirect headers
    'django.contrib.sessions.middleware.SessionMiddleware',     # Includes request.session in views
    'django.middleware.common.CommonMiddleware',                # Enables APPEND_SLASH & sets Content-Length header
    #'django.middleware.csrf.CsrfViewMiddleware',                # Activates {% csrt_token %} -based protection, DISABLED for now
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # Includes request.user in views
    'django.middleware.clickjacking.XFrameOptionsMiddleware',   # Sets X-Frame-Options header (clickjacking prevention)
]
SESSION_ENGINE = 'django.contrib.sessions.backends.cache'  # Use memcached sessions for better performance
SECURE_BROWSER_XSS_FILTER = True                           # (browser) Deny javascript in GET/POST args (USES HTTP HEADER)
SECURE_CONTENT_TYPE_NOSNIFF = True                         # (browser) Prevent overriding Content-Type (USES HTTP HEADER)
X_FRAME_OPTIONS = 'DENY'                                   # (browser) Deny using responses' content in iframes (USES HTTP HEADER)
ROOT_URLCONF = 'dj_lol_dcs.urls'
APPEND_SLASH = False                                       # Enforce url endpoints as defined (no "maybe /" unless explicitly)

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',  # Default template loader
        'DIRS': [],
        'APP_DIRS': True,                                              # Seek from every /<app_name>/templates
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',            # Enables DEBUG=True printout
                'django.template.context_processors.request',          # Passes <HttpRequest> "request" to each template
                'django.contrib.auth.context_processors.auth',         # Passes "user" and "perms" to each template
            ],
        },
    },
]

# REMINDER: As long as the files are served directly by Apache2 or CDN, any middleware is not applied to them

STATIC_ROOT = os.path.join(BASE_DIR, 'static')  # collectstatic's destination folder
STATIC_URL = '/dcs/static/'                     # As defined in apache2's .conf

WSGI_APPLICATION = 'dj_lol_dcs.wsgi.application'
